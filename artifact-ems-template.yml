parameters:
  - name: projectName
    type: string
  - name: projectPath
    type: string
  - name: publishWebProject
    type: boolean


jobs:
  - job: Build
    displayName: 'Build and Artifact ${{parameters.projectName}}'

    steps:
      - task: UseDotNet@2
        displayName: "Use .NET 8.x SDK"
        inputs:
          packageType: "sdk"
          version: "8.x"

      - task: NuGetToolInstaller@1
        displayName: "Install NuGet Tool"

      - task: NuGetAuthenticate@1
        displayName: "NuGet Tool Authenticate"

      - task: DotNetCoreCLI@2
        displayName: "Restore packages ${{parameters.projectName}}"
        inputs:
          command: "restore"
          projects: "$(Build.SourcesDirectory)/src/${{parameters.projectPath}}/${{parameters.projectName}}/*.csproj"
          feedsToUse: "select"
          vstsFeed: "af1899ba-7b7c-4fe4-b35a-e3cf0e8644a2/482815e9-0d0f-4199-b418-eadedef36271"

      # Dotnet Build
      - task: DotNetCoreCLI@2
        displayName: "Build ${{parameters.projectName}}"
        inputs:
          command: "build"
          projects: "$(Build.SourcesDirectory)/src/${{parameters.projectPath}}/${{parameters.projectName}}/*.csproj"
          arguments: "--no-restore --configuration Release"

      - task: DotNetCoreCLI@2
        displayName: "Publish ${{parameters.projectName}} Output"
        inputs:
          command: "publish"
          publishWebProjects: ${{parameters.publishWebProject}}
          projects: "$(Build.SourcesDirectory)/src/${{parameters.projectPath}}/${{parameters.projectName}}/*.csproj"
          arguments: "--no-build --configuration Release --output $(Build.ArtifactStagingDirectory)"
          zipAfterPublish: true

      - task: PublishBuildArtifacts@1
        displayName: "Publish ${{parameters.projectName}} Artifact"
        inputs:
          PathtoPublish: "$(Build.ArtifactStagingDirectory)"
          ArtifactName: "drop"
          publishLocation: "Container"
